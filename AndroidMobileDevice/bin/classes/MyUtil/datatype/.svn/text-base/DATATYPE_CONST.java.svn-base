//package ct.datatype;
package MyUtil.datatype;

public class DATATYPE_CONST
{
	// put all Geopage-related RPC data structures here
	public static final int iPOINT_2D               			= 1000;
	public static final int iPOINT_3D							= 1001;
	public static final int iLOCATION							= 1002;
	public static final int iREGION								= 1003;
	public static final int iTIME_STAMPED_LOCATION				= 1004;
	public static final int iLOCATION_UPDATE_POLICY				= 1005;
	public static final int iREQUEST_RESIDENT_DOMAIN			= 1006;
	public static final int	iUPDATE_TIME_STAMPED_LOCATION		= 1007;
	public static final int	iTRIGGER							= 1008;
	public static final int	iADD_GEOPAGE						= 1009;
	public static final int	iREQUEST_DID						= 1010;
	public static final int iREPORT_BLE_ACCELEROMETER_VALUE            = 1011;
	public static final int iREPORT_BLE_BATTERY_LEVEL                  = 1012;
	public static final int iREPORT_BLE_CELLPHONE_NO_MATCH             = 1013;
	public static final int iREPORT_BLE_ID                             = 1014;
	public static final int iREPORT_BLE_LINK_LOSS                      = 1015;
	public static final int iSEND_EASY_GEOPAGE                       = 1016;
	

    //******************************************************
    // definition of data struct size - U.S. STUFF
    //******************************************************
    public static final int MAX_LEN                  = 256;         // This is WINNT definition
    public static final int MAX_RESERVE              = 8;
    public static final int MAX_PATH                 = 260;
    public static final int MAX_APP_NAME             = 50;
    public static final int MAXDATALENGTH            = 100;
    public static final int MAXMESSAGELEN            = 300;
    public static final int MAX_ENUM_ITEMS           = 10;
    public static final int MAXNAMELENGTH            = 30;
    public static final int MAX_MACHINE_NAME         = 14;

    //******************************************************
    // definition of data struct size - ISRAEL's STUFF
    //******************************************************
    public static final int MAX_ACCOUNT_NAME         = 23;          // User Manager limitation
    public static final int MAX_COMMAND_LINE         = 255;         // arbitrary limitation
    public static final int MAX_COMMENT              = 255;         // User Manager limitation
    public static final int MAX_DESCRIPTION          = 255;         // Windows NT limitation
    public static final int MAX_DIRECTORY_NAME       = 64;          // TBD
    public static final int MAX_FULL_NAME            = 256;          // User manager limitation
    public static final int MAX_GROUP_NAME           = 255;         // User manager limitation
    public static final int MAX_MESSAGE              = 255;         // arbitrary limitation
    public static final int MAX_PASSWORD             = 15;          // User manager limitation
    public static final int MAX_SERVER_NAME          = 15;          // Windows NT limitation
    public static final int MAX_SHARE_NAME           = 80;          // Windows NT limitation
    public static final int MAX_VLINK_UNC            = 512;         // arbitrary virtual link list limitation
    public static final int MAX_SERVICE_NAME         = 256;
    public static final int MAX_DIRECTORY            = 15;
    public static final int MAX_COMPUTERNAME_LENGTH  = 15;

    public static final int NFS_MAX_DIR_PATH           = MAX_PATH;
    public static final int NFS_MAX_PATH_LENGTH        = MAX_PATH;
    public static final int NFS_MAX_HOST_NAME          = 256;
    public static final int NFS_MAX_GROUP_NAME         = 256;
    public static final int NFS_MAX_USER_NAME          = 20;
    public static final int NFS_MAX_DOMAIN_NAME        = 16;
    public static final int NFS_MAX_COMPUTER_NAME      = 16;
    public static final int NFS_MAX_NIS_DOMAIN_NAME    = 64;
    public static final int NFS_MAX_USER_ACCOUNT_SIZE  = NFS_MAX_USER_NAME + NFS_MAX_DOMAIN_NAME + 2;
    public static final int NFS_MAX_GROUP_ACCOUNT_SIZE = NFS_MAX_GROUP_NAME + NFS_MAX_DOMAIN_NAME + 2;
    public static final int MNTLST_HOST_LENGTH         = 256;
    public static final int MNTLST_PATH_LENGTH         = 1024;

    public static final int ACCOUNT_ADMINISTRATOR           = 1;
    public static final int ACCOUNT_BACKUP                  = 2;
    public static final int ACCOUNT_OPERATOR                = 4;
    public static final int ACCOUNT_GUEST                   = 8;
    public static final int ACCOUNT_USER                    = 16;
    public static final int MAX_LABEL                       = 32;
    public static final int MAX_SERIAL_NO                   = 31;
    public static final int AUDIT_LOGON_LOGOFF              = 1;
    public static final int AUDIT_FILE_OBJECT_ACCESS        = 2;
    public static final int AUDIT_USE_USER_RIGHTS           = 4;
    public static final int AUDIT_USER_GROUP_MANAGEMENT     = 8;
    public static final int AUDIT_SECURITY_POLICY_CHANGE    = 16;
    public static final int AUDIT_RESTART_SHUTDOWN_SYSTEM   = 32;
    public static final int AUDIT_PROCESS_TRACKING          = 64;

    public static final int MACHINE_SERVER_MANAGEMENT       = 1;
    public static final int MACHINE_SERVER_NAS              = 2;
    public static final int MACHINE_SERVER_EMAIL            = 4;
    public static final int MACHINE_SERVER_BACKUP           = 8;

    // PACKET_TYPE
    public static final int PACKET_TYPE_REQUEST             = 0;
    public static final int PACKET_TYPE_REPLY               = 1;
    public static final int PACKET_TYPE_ERROR               = 2;
    public static final int PACKET_TYPE_EVENT               = 3;
    public static final int PACKET_TYPE_NOTIFICATION        = 4;
    public static final int PACKET_TYPE_QUERY_INTERFACE     = 5;
    public static final int PACKET_TYPE_COUNT_INTERFACE     = 6;
    public static final int PACKET_TYPE_ROUTER_HEARTBEAT    = 7;
    public static final int PACKET_TYPE_SERVLET_HEARTBEAT   = 8;
    public static final int PACKET_TYPE_SERVLET_SETIP       = 9;
    public static final int PACKET_TYPE_ROUTER_SETIP        = 10;
    public static final int PACKET_TYPE_MAX                 = 0xFFFFFFFF;

    //******************************************************
    // definition of misc. stuff
    //******************************************************
    public static final int DIR_INOUT               = 0;
    public static final int DIR_IN                  = 1;
    public static final int DIR_OUT                 = 2;


    //******************************************************
    // definition of data struct size
    //******************************************************
    public static final int CONSOLE_HEARTBEAT_INTERVAL  = 1000;

    //******************************************************
    // definition of base type
    //******************************************************
    public static final int S8                       = 1;
    public static final int U8                       = 2;
    public static final int S16                      = 3;
    public static final int U16                      = 4;
    public static final int S32                      = 5;
    public static final int U32                      = 6;
    public static final int CHAR                     = 7;
    public static final int WCHAR                    = 8;
    public static final int U64                      = 9;
    public static final int ByteArray                = 10;

    //******************************************************
    // definition of event ID
    //******************************************************
    // event category
    public static final int AGENT_EVENT_PASS_THROUGH_ID = 1001;
    public static final int AGENT_EVENT_COMMAND_ID      = 1002;
    // event ID
    public static final int AGENT_EVENT_START_ID        = 1;
    public static final int AGENT_EVENT_LAST_ID         = 10000;
    public static final int CONSOLE_EVENT_START_ID      = 10001;
    public static final int CONSOLE_EVENT_LAST_ID       = 20000;

    public static final int EVENT_ID_AGENT_HEARTBEAT    = 1;
    public static final int EVENT_ID_CONSOLE_HEARTBEAT  = 10001;

    //******************************************************
    // definition of structure ID
    //******************************************************
    public static final int iGET_LOCAL_TIME                      = 1000;
    public static final int iRPC_CMD_1                           = 1001;
    public static final int iRPC_CMD_2                           = 1002;
    public static final int iRPC_CMD_3                           = 1003;
    public static final int iRPC_CMD_4                           = 1004;
    public static final int iRPC_CMD_5                           = 1005;
    public static final int iUNDEFINED_CMD                           = 0;
    public static final int iSTRUCT_LoginManagementUser              = 1;
    public static final int iSTRUCT_LogoutManagementUser             = 2;
    public static final int iSTRUCT_DisableLogins                    = 3;
    public static final int iSTRUCT_EnableLogins                     = 4;
    public static final int iSTRUCT_GetMachineConfiguration          = 5;
    public static final int iSTRUCT_GetMachineInformation            = 6;
    public static final int iSTRUCT_GetMachineSecurityMode           = 7;
    public static final int iSTRUCT_EnumServers                      = 8;
    public static final int iSTRUCT_GetServerConfiguration           = 9;
    public static final int iSTRUCT_EnumProtocols                    = 10;
    public static final int iSTRUCT_GetProtocolConfiguration         = 11;
    public static final int iSTRUCT_EnumProtocolStacks               = 12;
    public static final int iSTRUCT_GetProtocolStackConfiguration    = 13;
    public static final int iSTRUCT_AddAccountToGroup                = 14;
    public static final int iSTRUCT_ChangePassword                   = 15;
    public static final int iSTRUCT_CloneAccount                     = 16;
    public static final int iSTRUCT_CloneGroup                       = 17;
    public static final int iSTRUCT_CreateAccount                    = 18;
    public static final int iSTRUCT_CreateGroup                      = 19;
    public static final int iSTRUCT_DeleteAccount                    = 20;
    public static final int iSTRUCT_DeleteGroup                      = 21;
    public static final int iSTRUCT_DisableAccount                   = 22;
    public static final int iSTRUCT_EnableAccount                    = 23;
    public static final int iSTRUCT_EnumAccountMemberships           = 24;
    public static final int iSTRUCT_EnumAccountNonMemberships        = 25;
    public static final int iSTRUCT_EnumAccounts                     = 26;
    public static final int iSTRUCT_EnumGroupMembers                 = 27;
    public static final int iSTRUCT_EnumGroupNonMembers              = 28;
    public static final int iSTRUCT_EnumGroups                       = 29;
    public static final int iSTRUCT_GetAccountConfiguration          = 30;
    public static final int iSTRUCT_GetGroupConfiguration            = 31;
    public static final int iSTRUCT_RemoveAccountFromGroup           = 32;
    public static final int iSTRUCT_SetAccountConfiguration          = 33;
    public static final int iSTRUCT_SetGroupConfiguration            = 34;
    public static final int iSTRUCT_EnumUserDevices                  = 35;
    public static final int iSTRUCT_EnumUserPartitions               = 36;
    public static final int iSTRUCT_EnumUserResources                = 37;
    public static final int iSTRUCT_EnumUserSharePoints              = 38;
    public static final int iSTRUCT_EnumUserVirtualLinks             = 39;
    public static final int iSTRUCT_EnumUsers                        = 40;
    public static final int iSTRUCT_EnumResources                    = 41;
    public static final int iSTRUCT_EnumResourceUsers                = 42;
    public static final int iSTRUCT_DefineStorageSharePoint          = 43;
    public static final int iSTRUCT_GetSharePointConfiguration       = 44;
    public static final int iSTRUCT_RemoveSharePoint                 = 45;
    public static final int iSTRUCT_SetSharePointConfiguration       = 46;
    public static final int iSTRUCT_EjectMediaFromDevice             = 47;
    public static final int iSTRUCT_GetDeviceConfiguration           = 48;
    public static final int iSTRUCT_CachePartition                   = 49;
    public static final int iSTRUCT_EnumCachePartitions              = 50;
    public static final int iSTRUCT_EnumPartitionsOnDevice           = 51;
    public static final int iSTRUCT_FindClosePartitionDirectoryEntry = 52;
    public static final int iSTRUCT_FindFirstPartitionDirectoryEntry = 53;
    public static final int iSTRUCT_FindNextPartitionDirectoryEntry  = 54;
    public static final int iSTRUCT_EnumPartitionDirectoryEntries    = 55;
    public static final int iSTRUCT_GetCacheResultAndClose           = 56;
    public static final int iSTRUCT_GetCacheStatus                   = 57;
    public static final int iSTRUCT_GetPartitionConfiguration        = 58;
    public static final int iSTRUCT_GetPartitionInformation          = 59;
    public static final int iSTRUCT_RenamePartition                  = 60;
    public static final int iSTRUCT_ResetPartitionName               = 61;
    public static final int iSTRUCT_DefineVirtualLink                = 62;
    public static final int iSTRUCT_GetVirtualLinkConfiguration      = 63;
    public static final int iSTRUCT_RemoveVirtualLink                = 64;
    public static final int iSTRUCT_SetVirtualLinkConfiguration      = 65;
    public static final int iSTRUCT_TerminateEnumeration             = 66;
    public static final int iSTRUCT_TerminateOperation               = 67;

    public static final int iSTRUCT_ReadWriteManagerConfigFile       = 500;

    public static final int iSTRUCT_AgentHeartbeat               = 1000;
    public static final int iSTRUCT_ConsoleHeartbeat             = 2000;

    public static final int iSTRUCT_DATETIME                             = -1;
    public static final int iSTRUCT_DISK_ADDRESS_BLOCK                   = -1;
    public static final int iSTRUCT_DISK_ADDRESS_CHS                     = -1;
    public static final int iSTRUCT_DISK_ADDRESS                         = -1;
    public static final int iSTRUCT_HARDWARE_IRQPORT                     = -1;
    public static final int iSTRUCT_HARDWARE_SCSI                        = -1;
    public static final int iSTRUCT_HARDWARE_ADDRESS                     = -1;
    public static final int iSTRUCT_IP_ADDRESS                           = -1;
    public static final int iSTRUCT_IPX_NETWORK                          = -1;
    public static final int iSTRUCT_IPX_NODE                             = -1;
    public static final int iSTRUCT_IPX_SOCKET                           = -1;
    public static final int iSTRUCT_IPX_ADDRESS                          = -1;
    public static final int iSTRUCT_IP_DEFINITION                        = -1;
    public static final int iSTRUCT_IPX_DEFINITION                       = -1;
    public static final int iSTRUCT_SERVER_ADDRESS                       = -1;
    public static final int iSTRUCT_ACCOUNT_CONFIG                       = -1;
    public static final int iSTRUCT_APPLICATION_CONFIG                   = -1;
    public static final int iSTRUCT_DEVICE_CONFIG_NETWORK                = -1;
    public static final int iSTRUCT_DEVICE_CONFIG_CHANGER                = -1;
    public static final int iSTRUCT_DEVICE_CONFIG_FIXED                  = -1;
    public static final int iSTRUCT_DEVICE_CONFIG_REMOVEABLE             = -1;
    public static final int iSTRUCT_DEVICE_CONFIG                        = -1;
    public static final int iSTRUCT_FILE_INFO                            = -1;
    public static final int iSTRUCT_FORMAT_RESULT                        = -1;
    public static final int iSTRUCT_GROUP_CONFIG                         = -1;
    public static final int iSTRUCT_MACHINE_CONFIG                       = -1;
    public static final int iSTRUCT_MACHINE_INFO                         = -1;
    public static final int iSTRUCT_MACHINE_SECURITY                     = -1;
    public static final int iSTRUCT_OPERATION_STATUS                     = -1;
    public static final int iSTRUCT_PARTITION_CONFIG                     = -1;
    public static final int iSTRUCT_PARTITION_INFO                       = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_SMB                  = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG                      = -1;
    public static final int iSTRUCT_PROTOCOL_STACK_CONFIG_IP             = -1;
    public static final int iSTRUCT_PROTOCOL_STACK_CONFIG_IPX            = -1;
    public static final int iSTRUCT_PROTOCOL_STACK_CONFIG                = -1;
    public static final int iSTRUCT_RESOURCE_ENUM_INFO                   = -1;
    public static final int iSTRUCT_SERVER_CONFIG                        = -1;
    public static final int iSTRUCT_SHARE_DEVICE_CONFIG                  = -1;
    public static final int iSTRUCT_SHARE_STORAGE_CONFIG                 = -1;
    public static final int iSTRUCT_SHAREPOINT_CONFIG                    = -1;
    public static final int iSTRUCT_USER_INFO                            = -1;
    public static final int iSTRUCT_VIRTUAL_LINK_CONFIG                  = -1;
    public static final int iSTRUCT_SERVER_CONFIG_MANAGEMENT             = -1;
    public static final int iSTRUCT_SERVER_CONFIG_NAS                    = -1;
    public static final int iSTRUCT_SERVER_CONFIG_EMAIL                  = -1;
    public static final int iSTRUCT_SERVER_CONFIG_BACKUP                 = -1;

    public static final int iSTRUCT_PROTOCOL_CONFIG_NCP                  = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_HTTP                 = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_FTP                  = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_NFS                  = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_SMTP                 = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_POP3                 = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_TELNET               = -1;
    public static final int iSTRUCT_PROTOCOL_CONFIG_SNMP                 = -1;

    public static final int iSTRUCT_DEVICE_CONFIG_PRINTER                = -1;
    public static final int iSTRUCT_DEVICE_CONFIG_JUKEBOX                = -1;
    public static final int iSTRUCT_DEVICE_CONFIG_MODEM                  = -1;

    public static final int iSTRUCT_EVENT_NOTIFICATION                   = -1;
    public static final int iSTRUCT_EventInfo                            = -1;
    public static final int iSTRUCT_EventLogInfo                         = -1;

    // header files
    public static final int iACTIVE_APPLICATION_CONFIG                     =0;
    public static final int iACTIVE_APPLICATION_INFO                       =1;
    public static final int iAddAccountToGroup                             =2;
    public static final int iADDRESS_TYPE                                  =3;
    public static final int iAddServerToNetworkDirectory                   =4;
    public static final int iAPPLICATION_CONFIG                            =5;
    public static final int iARRAY                                         =6;
    public static final int iBroadcastMessage                              =7;
    public static final int iCachePartition                                =8;
    public static final int iCACHE_CREATION                                =9;
    public static final int iCACHE_PARTITION_INFO                          =10;
    public static final int iChangePassword                                =11;
    public static final int iClearPermissions                              =12;
    public static final int iClearSharePointPermissions                    =13;
    public static final int iCloneAccount                                  =14;
    public static final int iCloneGroup                                    =15;
    public static final int iCloseEnumeration                              =16;
    public static final int iCONNECTION_TYPE                               =17;
    public static final int icreateAccount                                 =18;
    public static final int icreateApplication                             =19;
    public static final int icreateDevice                                  =20;
    public static final int icreateEnumeration                             =21;
    public static final int icreateGroup                                   =22;
    public static final int icreateObject                                  =23;
    public static final int icreatePartition                               =24;
    public static final int icreateServer                                  =25;
    public static final int icreateSharePoint                              =26;
    public static final int iDATETIME                                      =27;
    public static final int iDeleteAccount                                 =28;
    public static final int iDeleteGroup                                   =29;
    public static final int iDestroyObject                                 =30;
    public static final int iDEVICE_CLASS_TYPE                             =31;
    public static final int iDEVICE_CONFIG                                 =32;
    public static final int iDEVICE_CONFIG_CHANGER                         =33;
    public static final int iDEVICE_CONFIG_FIXED                           =34;
    public static final int iDEVICE_CONFIG_JUKEBOX                         =35;
    public static final int iDEVICE_CONFIG_MODEM                           =36;
    public static final int iDEVICE_CONFIG_NETWORK                         =37;
    public static final int iDEVICE_CONFIG_PRINTER                         =38;
    public static final int iDEVICE_CONFIG_REMOVEABLE                      =39;
    public static final int iDEVICE_CONFIG_UNION                           =40;
    public static final int iDEVICE_INFO                                   =41;
    public static final int iDEVICE_INFO_CHANGER                           =42;
    public static final int iDEVICE_INFO_FIXED                             =43;
    public static final int iDEVICE_INFO_JUKEBOX                           =44;
    public static final int iDEVICE_INFO_MODEM                             =45;
    public static final int iDEVICE_INFO_NETWORK                           =46;
    public static final int iDEVICE_INFO_PRINTER                           =47;
    public static final int iDEVICE_INFO_REMOVEABLE                        =48;
    public static final int iDEVICE_INFO_UNION                             =49;
    public static final int iDisableAccount                                =50;
    public static final int iDisableLogins                                 =51;
    public static final int iDisableServer                                 =52;
    public static final int iDISK_ADDRESS                                  =53;
    public static final int iEjectMediaFromDevice                          =54;
    public static final int iEnableAccount                                 =55;
    public static final int iEnableLogins                                  =56;
    public static final int iEnableServer                                  =57;
    public static final int iEnumAccountMemberships                        =58;
    public static final int iEnumAccountNonMemberships                     =59;
    public static final int iEnumCachePartitions                           =60;
    public static final int iEnumerate                                     =61;
    public static final int iEnumGroupMembers                              =62;
    public static final int iEnumGroupNonMembers                           =63;
    public static final int iEnumNetworkDirectoriesForServer               =64;
    public static final int iEnumPartitionDirectoryEntries                 =65;
    public static final int iEnumResourceUsers                             =66;
    public static final int iEnumServerAddresses                           =67;
    public static final int iEnumTimeZones                                 =68;
    public static final int iEnumUserResources                             =69;
    public static final int iENUM_FILTER_TYPE                              =70;
    public static final int iexecuteApplication                            =71;
    public static final int iFILESYSTEM_TYPE                               =72;
    public static final int iFILTER_OBJECT                                 =73;
    public static final int iFILTER_UNION                                  =74;
    public static final int iFormatPartition                               =75;
    public static final int iFORMAT_TYPE                                   =76;
    public static final int iGetAccountAuditPolicy                         =77;
    public static final int iGetAccountConfiguration                       =78;
    public static final int iGetActiveApplicationResult                    =79;
    public static final int iGetEffectivePermissions                       =80;
    public static final int iGetEffectiveSharePointPermissions             =81;
    public static final int iGetGroupConfiguration                         =82;
    public static final int iGetMachineAuditPolicy                         =83;
    public static final int iGetMachineSecurityMode                        =84;
    public static final int iGetMachineTime                                =85;
    public static final int iGetManagementUserProfile                      =86;
    public static final int iGetObjectConfiguration                        =87;
    public static final int iGetObjectInformation                          =88;
    public static final int iGetPermissions                                =89;
    public static final int iGetSharePointPermissions                      =90;
    public static final int ihandle                                        =91;
    public static final int iHARDWARE_ADDRESS                              =92;
    public static final int iHARDWARE_IRQPORT                              =93;
    public static final int iHARDWARE_SCSI                                 =94;
    public static final int iinitialise                                    =95;
    public static final int iinitialiseThread                              =96;
    public static final int iIPX_ADDRESS                                   =97;
    public static final int iIPX_FRAME_TYPE                                =98;
    public static final int iIPX_NETWORK                                   =99;
    public static final int iIPX_NODE                                      =100;
    public static final int iIPX_SOCKET                                    =101;
    public static final int iIP_ADDRESS                                    =102;
    public static final int iLoginManagementUser                           =103;
    public static final int iLogoutAllUsers                                =104;
    public static final int iLogoutManagementUser                          =105;
    public static final int iMachineDown                                   =106;
    public static final int iMACHINE_CONFIG                                =107;
    public static final int iMACHINE_INFO                                  =108;
    public static final int iMACHINE_SECURITY                              =109;
    public static final int iMACHINE_SECURITY_TYPE                         =110;
    public static final int iMANAGEMENT_PROFILE                            =111;
    public static final int iMANAGEMENT_USER_TYPE                          =112;
    public static final int iMEDIA_CLASS_TYPE                              =113;
    public static final int inotifyCreate                                  =114;
    public static final int inotifyDelete                                  =115;
    public static final int iOBJECT                                        =116;
    public static final int iOBJECT_TYPE                                   =117;
    public static final int iPartitionMediaInDevice                        =118;
    public static final int iPARTITION_CONFIG                              =119;
    public static final int iPARTITION_INFO                                =120;
    public static final int iPROTOCOL_CONFIG                               =121;
    public static final int iPROTOCOL_CONFIG_APPLE                         =122;
    public static final int iPROTOCOL_CONFIG_FTP                           =123;
    public static final int iPROTOCOL_CONFIG_HTTP                          =124;
    public static final int iPROTOCOL_CONFIG_NCP                           =125;
    public static final int iPROTOCOL_CONFIG_NFS                           =126;
    public static final int iPROTOCOL_CONFIG_POP3                          =127;
    public static final int iPROTOCOL_CONFIG_SMB                           =128;
    public static final int iPROTOCOL_CONFIG_SMTP                          =129;
    public static final int iPROTOCOL_CONFIG_SNMP                          =130;
    public static final int iPROTOCOL_CONFIG_TELNET                        =131;
    public static final int iPROTOCOL_CONFIG_UNION                         =132;
    public static final int iPROTOCOL_INFO                                 =133;
    public static final int iPROTOCOL_INFO_APPLE                           =134;
    public static final int iPROTOCOL_INFO_FTP                             =135;
    public static final int iPROTOCOL_INFO_HTTP                            =136;
    public static final int iPROTOCOL_INFO_NCP                             =137;
    public static final int iPROTOCOL_INFO_NFS                             =138;
    public static final int iPROTOCOL_INFO_POP3                            =139;
    public static final int iPROTOCOL_INFO_SMB                             =140;
    public static final int iPROTOCOL_INFO_SMTP                            =141;
    public static final int iPROTOCOL_INFO_SNMP                            =142;
    public static final int iPROTOCOL_INFO_TELNET                          =143;
    public static final int iPROTOCOL_INFO_UNION                           =144;
    public static final int iPROTOCOL_STACK_CONFIG                         =145;
    public static final int iPROTOCOL_STACK_CONFIG_IP                      =146;
    public static final int iPROTOCOL_STACK_CONFIG_IPX                     =147;
    public static final int iPROTOCOL_STACK_CONFIG_UNION                   =148;
    public static final int iPROTOCOL_STACK_INFO                           =149;
    public static final int iPROTOCOL_STACK_INFO_IP                        =150;
    public static final int iPROTOCOL_STACK_INFO_IPX                       =151;
    public static final int iPROTOCOL_STACK_INFO_UNION                     =152;
    public static final int iPROTOCOL_TYPE                                 =153;
    public static final int iRemoveAccountFromGroup                        =154;
    public static final int iRemoveServerFromNetworkDirectory              =155;
    public static final int iRemoveSharePoint                              =156;
    public static final int iRESOURCE_CLASS_TYPE                           =157;
    public static final int iRESOURCE_ENUM_INFO                            =158;
    public static final int iRESOURCE_ENUM_UNION                           =159;
    public static final int iScanPartition                                 =160;
    public static final int iSCHEDULED_APPLICATION_CONFIG                  =161;
    public static final int iSendUserMessage                               =162;
    public static final int iSERVER_ADDRESS                                =163;
    public static final int iSERVER_ADDRESS_IP                             =164;
    public static final int iSERVER_ADDRESS_IPX                            =165;
    public static final int iSERVER_BINDING_TYPE                           =166;
    public static final int iSERVER_CONFIG                                 =167;
    public static final int iSERVER_CONFIG_BACKUP                          =168;
    public static final int iSERVER_CONFIG_EMAIL                           =169;
    public static final int iSERVER_CONFIG_MANAGEMENT                      =170;
    public static final int iSERVER_CONFIG_NAS                             =171;
    public static final int iSERVER_CONFIG_UNION                           =172;
    public static final int iSERVER_TYPE                                   =173;
    public static final int iSetAccountAuditPolicy                         =174;
    public static final int iSetAccountConfiguration                       =175;
    public static final int iSetGroupConfiguration                         =176;
    public static final int iSetMachineAuditPolicy                         =177;
    public static final int iSetMachineSecurityMode                        =178;
    public static final int iSetMachineSerialNumber                        =179;
    public static final int iSetMachineTime                                =180;
    public static final int iSetManagementUserProfile                      =181;
    public static final int iSetObjectConfiguration                        =182;
    public static final int iSetPermissions                                =183;
    public static final int iSetSharePointPermissions                      =184;
    public static final int iSHAREPOINT_CONFIG                             =185;
    public static final int iSHARE_CONFIG_UNION                            =186;
    public static final int iSHARE_DEVICE_CONFIG                           =187;
    public static final int iSHARE_STORAGE_CONFIG                          =188;
    public static final int iSHARE_TYPE                                    =189;
    public static final int iSHUTDOWN_TYPE                                 =190;
    public static final int iSMB_RESOURCE_TYPE                             =191;
    public static final int iterminate                                     =192;
    public static final int iterminateThread                               =193;
    public static final int iTIMEZONE_INFO                                 =194;
    public static final int iUSER_ADDRESS                                  =195;
    public static final int iUSER_INFO                                     =196;
    public static final int ivalidate                                      =197;
    public static final int iVIRTUAL_LINK_CONFIG                           =198;
    public static final int iWIDGET_ENUM_INFO                              =199;
    public static final int iWIDGET_ENUM_UNION                             =200;
    public static final int iWIDGET_TYPE                                   =201;
    public static final int iXBadPtrException                              =202;
    public static final int iCreateAccount                                 =203;
    public static final int iGROUP_CONFIG                                  =204;
    public static final int iCreateObject                                  =205;
    public static final int iACCOUNT_CONFIG                                =206;
    public static final int iCreateEnumeration                             =207;
    public static final int iCreateGroup                                   =208;
    public static final int iRESOURCE_CLASS                                =209;
    public static final int iPACKET_HEADER                                 =210;
    public static final int iNotifyUserLogoff                              =211;
    public static final int iEVENT_INFO                                    =212;
    public static final int iEVENTLOG_INFO                                 =213;
    public static final int iHARDWARE_MEMORY                               =214;
    public static final int iHARDWARE_PORT                                 =215;
    public static final int iNotifyNewMedia                                =216;
    public static final int iNotifyUserConnectedToShare                    =217;
    public static final int iNotifyUserConnectedToStorageObject            =218;
    public static final int iNotifyUserDisconnectedFromShare               =219;
    public static final int iNotifyUserDisconnectedFromStorageObject       =220;
    public static final int iNotifyUserLogon                               =221;
    public static final int iFILE_INFO                                     =222;
    public static final int iFILTER_HANDLE                                 =223;
    public static final int iSERVER_SUMMARY                                =224;
    public static final int iSERVER_HRESOURCE                              =225;
    public static final int iGetServerSummaryInformation                   =226;
    public static final int iHANDLE_STRUCT                                 =227;
    public static final int iHRESOURCE                                     =228;
    public static final int iEXT_PACKET_HEADER_TAG                         =229;
    public static final int iROUTER_HEARTBEAT                              =230;
    public static final int iClearAllEventLogFiles                         =231;
    public static final int iClearEventLogFile                             =232;
    public static final int iEnumEventLogFiles                             =233;
    public static final int iEnumEvents                                    =234;
    public static final int iGetAlertCategory                              =235;
    public static final int iGetEventInsertString                          =236;
    public static final int iGetSelectedEvents                             =237;
    public static final int iSetAlertCategory                              =238;
    public static final int iSetEventLogMaxSize                            =239;
    public static final int iSetLogOverwritePolicy                         =240;
    public static final int iStartEvents                                   =241;
    public static final int iStopEvents                                    =242;

    public static final int iNFS_ENUM_ACC_FILTER                           =243;
    public static final int iNFS_EXPORT_TAG                                =244;
    public static final int iNFS_UNIX_USER_TAG                             =245;
    public static final int iStartNFSServer                                =246;
    public static final int iStopNFSServer                                 =247;
    public static final int iWIDGET_NFS_CONFIG_TAG                         =248;
    public static final int iWIDGET_NFS_INFO_TAG                           =249;
    public static final int iLoadNFSConfigDefaults                         =250;

    public static final int iFTC_ActiveMounts                              =251;
    public static final int iFTC_ConfigInfo                                =252;
    public static final int iFTC_ExportInfo                                =253;
    public static final int iFTC_GroupID                                   =254;
    public static final int iFTC_GroupInfo                                 =255;
    public static final int iFTC_MountStatistics                           =256;
    public static final int iFTC_NFSStatistics                             =257;
    public static final int iNFS_ACCOUNT_TAG                               =258;
    public static final int iNFS_ENUM_GROUP_FILTER                         =259;
    public static final int iNFS_GROUP_TAG                                 =260;
    public static final int iNFS_UNIX_GROUP_TAG                            =261;
    public static final int iFTC_RPCStatistics                             =262;
    public static final int iFTC_UserID                                    =263;
    public static final int iFTC_UserInfo                                  =264;

    public static final int iACTIVE_APPLICATION_RESULT                     =265;
    public static final int iSetIPConfiguration                            =266;
    public static final int igetWidgetInfo                                 =267;
    public static final int icount                                         =268;
    public static final int iSetMachineName                                =269;
    public static final int iNotifyEjectMedia                              =270;

    public static final int iDEVICE_CONFIG_IMAGE                           =271;
    public static final int iDEVICE_INFO_IMAGE                             =272;
    public static final int iNotifyCacheAbort                              =273;
    public static final int iNotifyCacheStart                              =274;
    public static final int iNotifyCacheEnd                                =275;

    public static final int iConnectionACK                                 =276;
    public static final int iOpenBoxSetup                                  =277;
    public static final int iOPENBOX_SETUP_CONFIG                          =278;

    public static final int iTerminateActiveApplication                    =279;

    public static final int iEnumPartitionDirectoryShares                  =280;
    public static final int iGetAttributes                                 =281;
    public static final int iGetPartitionDirectoryVirtualLink              =282;
    public static final int iSetAttributes                                 =283;

    public static final int iSVSCMCloseEnumeration                         =284;
    public static final int iSVSCMEnumerate                                =285;
    public static final int iSVSCMInstallService                           =286;
    public static final int iSVSCMListServices                             =287;
    public static final int iSVSCMMachineDown                              =288;
    public static final int iSVSCMQueryServiceState                        =289;
    public static final int iSVSCMSetServiceState                          =290;
    public static final int iSVSCMUninstallService                         =291;
    public static final int iSERVICE_STATUS                                =292;
    public static final int iENUM_SERVICE_INFO                             =293;

    public static final int iClearVirusScanResults                         =294;
    public static final int iEnumVirusScanResults                          =295;
    public static final int iVIRUS_SCAN_REPORT                             =296;
    public static final int iVIRUS_SCAN_RESULT                             =297;
    public static final int iVIRUS_SCAN_INFO                               =298;
    public static final int iVIRUS_SCAN_CONFIG                             =299;

    public static final int iFILE_OBJECT                                   =300;
    public static final int iNT_SERVICE                                    =301;
    public static final int iSaveFile                                      =302;
    public static final int iStopService                                   =303;
    public static final int iStartService                                  =304;
    public static final int iEXTERNAL_COMMAND                              =305;
    public static final int iLaunchCommand                                 =306;

    public static final int iNotifyNewRemoveableMedia                      =307;
    public static final int iGetPartitionDirectoryOwner                    =308;
    public static final int iSetPartitionDirectoryOwner                    =309;

    public static final int iSERVICE_CONFIG                                =310;
    public static final int iSVSCMQueryServiceConfig                       =311;
    public static final int iSVSCMSetServiceConfig                         =312;

    public static final int iAbortCachePartition                           =313;

    public static final int iSetPermissionsArray                           =314;
    public static final int iTRUSTEE_NAME                                  =315;
    public static final int iTRUSTEE_PERMISSIONS                           =316;

    public static final int iGetFile                                       =317;

    public static final int iGetSoftwareRaidArrayHandle                    =318;
    public static final int iSOFTWARE_RAID_ARRAY_CONFIGURATION             =319;
    public static final int iFILEXFER_INFO                                 =320;
    public static final int iFILEXFER_RESULT                               =321;

    public static final int iGetLicense                                    =322;
    public static final int iSaveLicense                                   =323;
    public static final int iLICENSE_OBJECT                                =324;




    // object type definition
    public static final int OBJECT_UNKNOWN               = 0;
    public static final int OBJECT_ACCOUNT               = 1;
    public static final int OBJECT_ACTIVE_APPLICATION    = 2;
    public static final int OBJECT_APPLICATION           = 3;
    public static final int OBJECT_DEVICE                = 4;
    public static final int OBJECT_GROUP                 = 5;
    public static final int OBJECT_MACHINE               = 6;
    public static final int OBJECT_MANAGEMENT_USER       = 7;
    public static final int OBJECT_PARTITION             = 8;
    public static final int OBJECT_PROTOCOL              = 9;
    public static final int OBJECT_PROTOCOL_STACK        = 10;
    public static final int OBJECT_RESOURCE              = 11;
    public static final int OBJECT_SCHEDULED_APPLICATION = 12;
    public static final int OBJECT_SERVER                = 13;
    public static final int OBJECT_SHAREPOINT            = 14;
    public static final int OBJECT_USER                  = 15;
    public static final int OBJECT_VIRTUAL_LINK          = 16;
    public static final int OBJECT_WIDGET                = 17;
    public static final int OBJECT_EVENT                 = 18;
    public static final int OBJECT_SECURITY              = 19;
    public static final int OBJECT_SERVICE               = 20;
    public static final int OBJECT_NFS_ACCOUNT           = 21;
    public static final int OBJECT_NFS_GROUP             = 22;
    public static final int OBJECT_NFS_CONFIG            = 23;
    public static final int OBJECT_NFS_EXPORT            = 24;
    public static final int OBJECT_LCD_MANAGEMENT        = 25;
    public static final int OBJECT_ANTI_VIRUS            = 26;
    public static final int OBJECT_SOFTWARE_RAID_ARRAY   = 27;
    public static final int OBJECT_FILE_OPERATION        = 28;

    static public int getStructID(ByteArray structName)
    {
        String name = structName.toString();
        return getStructID(name);
    }

    static public int getStructID(WCHAR[] structName)
    {
        String name = BaseType.toString(structName);
        return getStructID(name);
    }

    static public int getStructID(String name)
    {
        int ret = -1;

        if      (name.equals("ACTIVE_APPLICATION_CONFIG")) ret = iACTIVE_APPLICATION_CONFIG;
        else if (name.equals("AddAccountToGroup")) ret = iAddAccountToGroup;
        else if (name.equals("ADDRESS_TYPE")) ret = iADDRESS_TYPE;
        else if (name.equals("AddServerToNetworkDirectory")) ret = iAddServerToNetworkDirectory;
        else if (name.equals("APPLICATION_CONFIG")) ret = iAPPLICATION_CONFIG;
        else if (name.equals("ARRAY")) ret = iARRAY;
        else if (name.equals("BroadcastMessage")) ret = iBroadcastMessage;
        else if (name.equals("CachePartition")) ret = iCachePartition;
        else if (name.equals("CACHE_CREATION")) ret = iCACHE_CREATION;
        else if (name.equals("CACHE_PARTITION_INFO")) ret = iCACHE_PARTITION_INFO;
        else if (name.equals("ChangePassword")) ret = iChangePassword;
        else if (name.equals("ClearPermissions")) ret = iClearPermissions;
        else if (name.equals("ClearSharePointPermissions")) ret = iClearSharePointPermissions;
        else if (name.equals("CloneAccount")) ret = iCloneAccount;
        else if (name.equals("CloneGroup")) ret = iCloneGroup;
        else if (name.equals("CloseEnumeration")) ret = iCloseEnumeration;
        else if (name.equals("CONNECTION_TYPE")) ret = iCONNECTION_TYPE;
        else if (name.equals("CreateAccount")) ret = iCreateAccount;
        else if (name.equals("CreateEnumeration")) ret = iCreateEnumeration;
        else if (name.equals("CreateGroup")) ret = iCreateGroup;
        else if (name.equals("CreateObject")) ret = iCreateObject;
        else if (name.equals("DATETIME")) ret = iDATETIME;
        else if (name.equals("DeleteAccount")) ret = iDeleteAccount;
        else if (name.equals("DeleteGroup")) ret = iDeleteGroup;
        else if (name.equals("DestroyObject")) ret = iDestroyObject;
        else if (name.equals("DEVICE_CLASS_TYPE")) ret = iDEVICE_CLASS_TYPE;
        else if (name.equals("DEVICE_CONFIG")) ret = iDEVICE_CONFIG;
        else if (name.equals("DEVICE_CONFIG_CHANGER")) ret = iDEVICE_CONFIG_CHANGER;
        else if (name.equals("DEVICE_CONFIG_FIXED")) ret = iDEVICE_CONFIG_FIXED;
        else if (name.equals("DEVICE_CONFIG_JUKEBOX")) ret = iDEVICE_CONFIG_JUKEBOX;
        else if (name.equals("iDEVICE_CONFIG_MODEM")) ret = iDEVICE_CONFIG_MODEM;
        else if (name.equals("DEVICE_CONFIG_NETWORK")) ret = iDEVICE_CONFIG_NETWORK;
        else if (name.equals("DEVICE_CONFIG_PRINTER")) ret = iDEVICE_CONFIG_PRINTER;
        else if (name.equals("DEVICE_CONFIG_REMOVEABLE")) ret = iDEVICE_CONFIG_REMOVEABLE;
        else if (name.equals("DEVICE_CONFIG_UNION")) ret = iDEVICE_CONFIG_UNION;
        else if (name.equals("DEVICE_INFO")) ret = iDEVICE_INFO;
        else if (name.equals("DEVICE_INFO_CHANGER")) ret = iDEVICE_INFO_CHANGER;
        else if (name.equals("DEVICE_INFO_FIXED")) ret = iDEVICE_INFO_FIXED;
        else if (name.equals("DEVICE_INFO_JUKEBOX")) ret = iDEVICE_INFO_JUKEBOX;
        else if (name.equals("DEVICE_INFO_MODEM")) ret = iDEVICE_INFO_MODEM;
        else if (name.equals("DEVICE_INFO_NETWORK")) ret = iDEVICE_INFO_NETWORK;
        else if (name.equals("DEVICE_INFO_PRINTER")) ret = iDEVICE_INFO_PRINTER;
        else if (name.equals("DEVICE_INFO_REMOVEABLE")) ret = iDEVICE_INFO_REMOVEABLE;
        else if (name.equals("DEVICE_INFO_UNION")) ret = iDEVICE_INFO_UNION;
        else if (name.equals("DisableAccount")) ret = iDisableAccount;
        else if (name.equals("DisableLogins")) ret = iDisableLogins;
        else if (name.equals("DisableServer")) ret = iDisableServer;
        else if (name.equals("DISK_ADDRESS")) ret = iDISK_ADDRESS;
        else if (name.equals("EjectMediaFromDevice")) ret = iEjectMediaFromDevice;
        else if (name.equals("EnableAccount")) ret = iEnableAccount;
        else if (name.equals("EnableLogins")) ret = iEnableLogins;
        else if (name.equals("EnableServer")) ret = iEnableServer;
        else if (name.equals("EnumAccountMemberships")) ret = iEnumAccountMemberships;
        else if (name.equals("EnumAccountNonMemberships")) ret = iEnumAccountNonMemberships;
        else if (name.equals("EnumCachePartitions")) ret = iEnumCachePartitions;
        else if (name.equals("Enumerate")) ret = iEnumerate;
        else if (name.equals("EnumGroupMembers")) ret = iEnumGroupMembers;
        else if (name.equals("EnumGroupNonMembers")) ret = iEnumGroupNonMembers;
        else if (name.equals("EnumNetworkDirectoriesForServer")) ret = iEnumNetworkDirectoriesForServer;
        else if (name.equals("EnumPartitionDirectoryEntries")) ret = iEnumPartitionDirectoryEntries;
        else if (name.equals("EnumResourceUsers")) ret = iEnumResourceUsers;
        else if (name.equals("EnumServerAddresses")) ret = iEnumServerAddresses;
        else if (name.equals("EnumTimeZones")) ret = iEnumTimeZones;
        else if (name.equals("EnumUserResources")) ret = iEnumUserResources;
        else if (name.equals("ENUM_FILTER_TYPE")) ret = iENUM_FILTER_TYPE;
        else if (name.equals("executeApplication")) ret = iexecuteApplication;
        else if (name.equals("FILESYSTEM_TYPE")) ret = iFILESYSTEM_TYPE;
        else if (name.equals("FILTER_OBJECT")) ret = iFILTER_OBJECT;
        else if (name.equals("FILTER_UNION")) ret = iFILTER_UNION;
        else if (name.equals("FormatPartition")) ret = iFormatPartition;
        else if (name.equals("FORMAT_TYPE")) ret = iFORMAT_TYPE;
        else if (name.equals("GetAccountAuditPolicy")) ret = iGetAccountAuditPolicy;
        else if (name.equals("GetAccountConfiguration")) ret = iGetAccountConfiguration;
        else if (name.equals("GetActiveApplicationResult")) ret = iGetActiveApplicationResult;
        else if (name.equals("GetEffectivePermissions")) ret = iGetEffectivePermissions;
        else if (name.equals("GetEffectiveSharePointPermissions")) ret = iGetEffectiveSharePointPermissions;
        else if (name.equals("GetGroupConfiguration")) ret = iGetGroupConfiguration;
        else if (name.equals("GetMachineAuditPolicy")) ret = iGetMachineAuditPolicy;
        else if (name.equals("GetMachineSecurityMode")) ret = iGetMachineSecurityMode;
        else if (name.equals("GetMachineTime")) ret = iGetMachineTime;
        else if (name.equals("GetManagementUserProfile")) ret = iGetManagementUserProfile;
        else if (name.equals("GetObjectConfiguration")) ret = iGetObjectConfiguration;
        else if (name.equals("GetObjectInformation")) ret = iGetObjectInformation;
        else if (name.equals("GetPermissions")) ret = iGetPermissions;
        else if (name.equals("GetSharePointPermissions")) ret = iGetSharePointPermissions;
        else if (name.equals("handle")) ret = ihandle;
        else if (name.equals("HARDWARE_ADDRESS")) ret = iHARDWARE_ADDRESS;
        else if (name.equals("HARDWARE_IRQPORT")) ret = iHARDWARE_IRQPORT;
        else if (name.equals("HARDWARE_SCSI")) ret = iHARDWARE_SCSI;
        else if (name.equals("initialise")) ret = iinitialise;
        else if (name.equals("initialiseThread")) ret = iinitialiseThread;
        else if (name.equals("IPX_ADDRESS")) ret = iIPX_ADDRESS;
        else if (name.equals("IPX_FRAME_TYPE")) ret = iIPX_FRAME_TYPE;
        else if (name.equals("IPX_NETWORK")) ret = iIPX_NETWORK;
        else if (name.equals("IPX_NODE")) ret = iIPX_NODE;
        else if (name.equals("IPX_SOCKET")) ret = iIPX_SOCKET;
        else if (name.equals("IP_ADDRESS")) ret = iIP_ADDRESS;
        else if (name.equals("LoginManagementUser")) ret = iLoginManagementUser;
        else if (name.equals("LogoutAllUsers")) ret = iLogoutAllUsers;
        else if (name.equals("LogoutManagementUser")) ret = iLogoutManagementUser;
        else if (name.equals("MachineDown")) ret = iMachineDown;
        else if (name.equals("MACHINE_CONFIG")) ret = iMACHINE_CONFIG;
        else if (name.equals("MACHINE_INFO")) ret = iMACHINE_INFO;
        else if (name.equals("MACHINE_SECURITY")) ret = iMACHINE_SECURITY;
        else if (name.equals("MACHINE_SECURITY_TYPE")) ret = iMACHINE_SECURITY_TYPE;
        else if (name.equals("MANAGEMENT_PROFILE")) ret = iMANAGEMENT_PROFILE;
        else if (name.equals("MANAGEMENT_USER_TYPE")) ret = iMANAGEMENT_USER_TYPE;
        else if (name.equals("MEDIA_CLASS_TYPE")) ret = iMEDIA_CLASS_TYPE;
        else if (name.equals("notifyCreate")) ret = inotifyCreate;
        else if (name.equals("notifyDelete")) ret = inotifyDelete;
        else if (name.equals("OBJECT")) ret = iOBJECT;
        else if (name.equals("OBJECT_TYPE")) ret = iOBJECT_TYPE;
        else if (name.equals("PartitionMediaInDevice")) ret = iPartitionMediaInDevice;
        else if (name.equals("PARTITION_CONFIG")) ret = iPARTITION_CONFIG;
        else if (name.equals("PARTITION_INFO")) ret = iPARTITION_INFO;
        else if (name.equals("PROTOCOL_CONFIG")) ret = iPROTOCOL_CONFIG;
        else if (name.equals("PROTOCOL_CONFIG_APPLE")) ret = iPROTOCOL_CONFIG_APPLE;
        else if (name.equals("PROTOCOL_CONFIG_FTP")) ret = iPROTOCOL_CONFIG_FTP;
        else if (name.equals("PROTOCOL_CONFIG_HTTP")) ret = iPROTOCOL_CONFIG_HTTP;
        else if (name.equals("PROTOCOL_CONFIG_NCP")) ret = iPROTOCOL_CONFIG_NCP;
        else if (name.equals("PROTOCOL_CONFIG_NFS")) ret = iPROTOCOL_CONFIG_NFS;
        else if (name.equals("PROTOCOL_CONFIG_POP3")) ret = iPROTOCOL_CONFIG_POP3;
        else if (name.equals("PROTOCOL_CONFIG_SMB")) ret = iPROTOCOL_CONFIG_SMB;
        else if (name.equals("PROTOCOL_CONFIG_SMTP")) ret = iPROTOCOL_CONFIG_SMTP;
        else if (name.equals("PROTOCOL_CONFIG_SNMP")) ret = iPROTOCOL_CONFIG_SNMP;
        else if (name.equals("PROTOCOL_CONFIG_TELNET")) ret = iPROTOCOL_CONFIG_TELNET;
        else if (name.equals("PROTOCOL_CONFIG_UNION")) ret = iPROTOCOL_CONFIG_UNION;
        else if (name.equals("PROTOCOL_INFO")) ret = iPROTOCOL_INFO;
        else if (name.equals("PROTOCOL_INFO_APPLE")) ret = iPROTOCOL_INFO_APPLE;
        else if (name.equals("PROTOCOL_INFO_FTP")) ret = iPROTOCOL_INFO_FTP;
        else if (name.equals("PROTOCOL_INFO_HTTP")) ret = iPROTOCOL_INFO_HTTP;
        else if (name.equals("PROTOCOL_INFO_NCP")) ret = iPROTOCOL_INFO_NCP;
        else if (name.equals("PROTOCOL_INFO_NFS")) ret = iPROTOCOL_INFO_NFS;
        else if (name.equals("PROTOCOL_INFO_POP3")) ret = iPROTOCOL_INFO_POP3;
        else if (name.equals("PROTOCOL_INFO_SMB")) ret = iPROTOCOL_INFO_SMB;
        else if (name.equals("PROTOCOL_INFO_SMTP")) ret = iPROTOCOL_INFO_SMTP;
        else if (name.equals("PROTOCOL_INFO_SNMP")) ret = iPROTOCOL_INFO_SNMP;
        else if (name.equals("PROTOCOL_INFO_TELNET")) ret = iPROTOCOL_INFO_TELNET;
        else if (name.equals("PROTOCOL_INFO_UNION")) ret = iPROTOCOL_INFO_UNION;
        else if (name.equals("PROTOCOL_STACK_CONFIG")) ret = iPROTOCOL_STACK_CONFIG;
        else if (name.equals("PROTOCOL_STACK_CONFIG_IP")) ret = iPROTOCOL_STACK_CONFIG_IP;
        else if (name.equals("PROTOCOL_STACK_CONFIG_IPX")) ret = iPROTOCOL_STACK_CONFIG_IPX;
        else if (name.equals("PROTOCOL_STACK_CONFIG_UNION")) ret = iPROTOCOL_STACK_CONFIG_UNION;
        else if (name.equals("PROTOCOL_STACK_INFO")) ret = iPROTOCOL_STACK_INFO;
        else if (name.equals("PROTOCOL_STACK_INFO_IP")) ret = iPROTOCOL_STACK_INFO_IP;
        else if (name.equals("PROTOCOL_STACK_INFO_IPX")) ret = iPROTOCOL_STACK_INFO_IPX;
        else if (name.equals("PROTOCOL_STACK_INFO_UNION")) ret = iPROTOCOL_STACK_INFO_UNION;
        else if (name.equals("PROTOCOL_TYPE")) ret = iPROTOCOL_TYPE;
        else if (name.equals("RemoveAccountFromGroup")) ret = iRemoveAccountFromGroup;
        else if (name.equals("RemoveServerFromNetworkDirectory")) ret = iRemoveServerFromNetworkDirectory;
        else if (name.equals("RemoveSharePoint")) ret = iRemoveSharePoint;
        else if (name.equals("RESOURCE_CLASS_TYPE")) ret = iRESOURCE_CLASS_TYPE;
        else if (name.equals("RESOURCE_ENUM_INFO")) ret = iRESOURCE_ENUM_INFO;
        else if (name.equals("RESOURCE_ENUM_UNION")) ret = iRESOURCE_ENUM_UNION;
        else if (name.equals("ScanPartition")) ret = iScanPartition;
        else if (name.equals("SCHEDULED_APPLICATION_CONFIG")) ret = iSCHEDULED_APPLICATION_CONFIG;
        else if (name.equals("SendUserMessage")) ret = iSendUserMessage;
        else if (name.equals("SERVER_ADDRESS")) ret = iSERVER_ADDRESS;
        else if (name.equals("SERVER_ADDRESS_IP")) ret = iSERVER_ADDRESS_IP;
        else if (name.equals("SERVER_ADDRESS_IPX")) ret = iSERVER_ADDRESS_IPX;
        else if (name.equals("SERVER_BINDING_TYPE")) ret = iSERVER_BINDING_TYPE;
        else if (name.equals("SERVER_CONFIG")) ret = iSERVER_CONFIG;
        else if (name.equals("SERVER_CONFIG_BACKUP")) ret = iSERVER_CONFIG_BACKUP;
        else if (name.equals("SERVER_CONFIG_EMAIL")) ret = iSERVER_CONFIG_EMAIL;
        else if (name.equals("SERVER_CONFIG_MANAGEMENT")) ret = iSERVER_CONFIG_MANAGEMENT;
        else if (name.equals("SERVER_CONFIG_NAS")) ret = iSERVER_CONFIG_NAS;
        else if (name.equals("SERVER_CONFIG_UNION")) ret = iSERVER_CONFIG_UNION;
        else if (name.equals("SERVER_TYPE")) ret = iSERVER_TYPE;
        else if (name.equals("SetAccountAuditPolicy")) ret = iSetAccountAuditPolicy;
        else if (name.equals("SetAccountConfiguration")) ret = iSetAccountConfiguration;
        else if (name.equals("SetGroupConfiguration")) ret = iSetGroupConfiguration;
        else if (name.equals("SetMachineAuditPolicy")) ret = iSetMachineAuditPolicy;
        else if (name.equals("SetMachineSecurityMode")) ret = iSetMachineSecurityMode;
        else if (name.equals("SetMachineSerialNumber")) ret = iSetMachineSerialNumber;
        else if (name.equals("SetMachineTime")) ret = iSetMachineTime;
        else if (name.equals("SetManagementUserProfile")) ret = iSetManagementUserProfile;
        else if (name.equals("SetObjectConfiguration")) ret = iSetObjectConfiguration;
        else if (name.equals("SetPermissions")) ret = iSetPermissions;
        else if (name.equals("SetSharePointPermissions")) ret = iSetSharePointPermissions;
        else if (name.equals("SHAREPOINT_CONFIG")) ret = iSHAREPOINT_CONFIG;
        else if (name.equals("SHARE_CONFIG_UNION")) ret = iSHARE_CONFIG_UNION;
        else if (name.equals("SHARE_DEVICE_CONFIG")) ret = iSHARE_DEVICE_CONFIG;
        else if (name.equals("SHARE_STORAGE_CONFIG")) ret = iSHARE_STORAGE_CONFIG;
        else if (name.equals("SHARE_TYPE")) ret = iSHARE_TYPE;
        else if (name.equals("SHUTDOWN_TYPE")) ret = iSHUTDOWN_TYPE;
        else if (name.equals("SMB_RESOURCE_TYPE")) ret = iSMB_RESOURCE_TYPE;
        else if (name.equals("terminate")) ret = iterminate;
        else if (name.equals("terminateThread")) ret = iterminateThread;
        else if (name.equals("TIMEZONE_INFO")) ret = iTIMEZONE_INFO;
        else if (name.equals("USER_ADDRESS")) ret = iUSER_ADDRESS;
        else if (name.equals("USER_INFO")) ret = iUSER_INFO;
        else if (name.equals("validate")) ret = ivalidate;
        else if (name.equals("VIRTUAL_LINK_CONFIG")) ret = iVIRTUAL_LINK_CONFIG;
        else if (name.equals("WIDGET_ENUM_INFO")) ret = iWIDGET_ENUM_INFO;
        else if (name.equals("WIDGET_ENUM_UNION")) ret = iWIDGET_ENUM_UNION;
        else if (name.equals("WIDGET_TYPE")) ret = iWIDGET_TYPE;
        else if (name.equals("XBadPtrException")) ret = iXBadPtrException;
        else if (name.equals("CreateAccount")) ret = iCreateAccount;
        else if (name.equals("GROUP_CONFIG")) ret = iGROUP_CONFIG;
        else if (name.equals("CreateObject")) ret = iCreateObject;
        else if (name.equals("ACCOUNT_CONFIG")) ret = iACCOUNT_CONFIG;
        else if (name.equals("CreateEnumeration")) ret = iCreateEnumeration;
        else if (name.equals("CreateGroup")) ret = iCreateGroup;
        else if (name.equals("RESOURCE_CLASS")) ret = iRESOURCE_CLASS;
        else if (name.equals("PACKET_HEADER")) ret = iPACKET_HEADER;
        else if (name.equals("NotifyUserLogoff")) ret = iNotifyUserLogoff;
        else if (name.equals("EVENT_INFO")) ret = iEVENT_INFO;
        else if (name.equals("EVENTLOG_INFO")) ret = iEVENTLOG_INFO;
        else if (name.equals("HARDWARE_MEMORY")) ret = iHARDWARE_MEMORY;
        else if (name.equals("HARDWARE_PORT")) ret = iHARDWARE_PORT;
        else if (name.equals("NotifyNewMedia")) ret = iNotifyNewMedia;
        else if (name.equals("NotifyUserConnectedToShare")) ret = iNotifyUserConnectedToShare;
        else if (name.equals("NotifyUserConnectedToStorageObject")) ret = iNotifyUserConnectedToStorageObject;
        else if (name.equals("NotifyUserDisconnectedFromShare")) ret = iNotifyUserDisconnectedFromShare;
        else if (name.equals("NotifyUserDisconnectedFromStorageObject")) ret = iNotifyUserDisconnectedFromStorageObject;
        else if (name.equals("NotifyUserLogon")) ret = iNotifyUserLogon;
        else if (name.equals("FILE_INFO")) ret = iFILE_INFO;
        else if (name.equals("FILTER_HANDLE")) ret = iFILTER_HANDLE;
        else if (name.equals("SERVER_SUMMARY")) ret = iSERVER_SUMMARY;
        else if (name.equals("SERVER_HRESOURCE")) ret = iSERVER_HRESOURCE;
        else if (name.equals("GetServerSummaryInformation")) ret = iGetServerSummaryInformation;
        else if (name.equals("HANDLE_STRUCT")) ret = iHANDLE_STRUCT;
        else if (name.equals("HRESOURCE")) ret = iHRESOURCE;
        else if (name.equals("EXT_PACKET_HEADER_TAG")) ret = iEXT_PACKET_HEADER_TAG;
        else if (name.equals("ROUTER_HEARTBEAT")) ret = iROUTER_HEARTBEAT;
        else if (name.equals("ClearAllEventLogFiles")) ret = iClearAllEventLogFiles;
        else if (name.equals("ClearEventLogFile")) ret = iClearEventLogFile;
        else if (name.equals("EnumEventLogFiles")) ret = iEnumEventLogFiles;
        else if (name.equals("EnumEvents")) ret = iEnumEvents;
        else if (name.equals("GetAlertCategory")) ret = iGetAlertCategory;
        else if (name.equals("GetEventInsertString")) ret = iGetEventInsertString;
        else if (name.equals("GetSelectedEvents")) ret = iGetSelectedEvents;
        else if (name.equals("SetAlertCategory")) ret = iSetAlertCategory;
        else if (name.equals("SetEventLogMaxSize")) ret = iSetEventLogMaxSize;
        else if (name.equals("SetLogOverwritePolicy")) ret = iSetLogOverwritePolicy;
        else if (name.equals("StartEvents")) ret = iStartEvents;
        else if (name.equals("StopEvents")) ret = iStopEvents;
        else if (name.equals("NFS_ENUM_ACC_FILTER")) ret = iNFS_ENUM_ACC_FILTER;
        else if (name.equals("NFS_EXPORT_TAG")) ret = iNFS_EXPORT_TAG;
        else if (name.equals("StartNFSServer")) ret = iStartNFSServer;
        else if (name.equals("StopNFSServer")) ret = iStopNFSServer;
        else if (name.equals("WIDGET_NFS_CONFIG_TAG")) ret = iWIDGET_NFS_CONFIG_TAG;
        else if (name.equals("WIDGET_NFS_INFO_TAG")) ret = iWIDGET_NFS_INFO_TAG;
        else if (name.equals("LoadNFSConfigDefaults")) ret = iLoadNFSConfigDefaults;
        else if (name.equals("FTC_ActiveMounts")) ret = iFTC_ActiveMounts;
        else if (name.equals("FTC_ConfigInfo")) ret = iFTC_ConfigInfo;
        else if (name.equals("FTC_ExportInfo")) ret = iFTC_ExportInfo;
        else if (name.equals("FTC_GroupID")) ret = iFTC_GroupID;
        else if (name.equals("FTC_GroupInfo")) ret = iFTC_GroupInfo;
        else if (name.equals("FTC_MountStatistics")) ret = iFTC_MountStatistics;
        else if (name.equals("FTC_NFSStatistics")) ret = iFTC_NFSStatistics;
        else if (name.equals("NFS_ACCOUNT_TAG")) ret = iNFS_ACCOUNT_TAG;
        else if (name.equals("NFS_ENUM_GROUP_FILTER")) ret = iNFS_ENUM_GROUP_FILTER;
        else if (name.equals("NFS_GROUP_TAG")) ret = iNFS_GROUP_TAG;
        else if (name.equals("NFS_UNIX_GROUP_TAG")) ret = iNFS_UNIX_GROUP_TAG;
        else if (name.equals("FTC_RPCStatistics")) ret = iFTC_RPCStatistics;
        else if (name.equals("FTC_UserID")) ret = iFTC_UserID;
        else if (name.equals("FTC_UserInfo")) ret = iFTC_UserInfo;
        else if (name.equals("ACTIVE_APPLICATION_RESULT")) ret = iACTIVE_APPLICATION_RESULT;
        else if (name.equals("SetIPConfiguration")) ret = iSetIPConfiguration;
        else if (name.equals("getWidgetInfo")) ret = igetWidgetInfo;
        else if (name.equals("count")) ret = icount;
        else if (name.equals("SetMachineName")) ret = iSetMachineName;
        else if (name.equals("DEVICE_CONFIG_IMAGE")) ret = iDEVICE_CONFIG_IMAGE;
        else if (name.equals("DEVICE_INFO_IMAGE")) ret = iDEVICE_INFO_IMAGE;
        else if (name.equals("NotifyCacheAbort")) ret = iNotifyCacheAbort;
        else if (name.equals("NotifyCacheStart")) ret = iNotifyCacheStart;
        else if (name.equals("NotifyCacheEnd")) ret = iNotifyCacheEnd;
        else if (name.equals("ConnectionACK")) ret = iConnectionACK;
        else if (name.equals("OpenBoxSetup")) ret = iOpenBoxSetup;
        else if (name.equals("OPENBOX_SETUP_CONFIG")) ret = iOPENBOX_SETUP_CONFIG;
        else if (name.equals("TerminateActiveApplication")) ret = iTerminateActiveApplication;
        else if (name.equals("EnumPartitionDirectoryShares")) ret = iEnumPartitionDirectoryShares;
        else if (name.equals("GetAttributes")) ret = iGetAttributes;
        else if (name.equals("GetPartitionDirectoryVirtualLink")) ret = iGetPartitionDirectoryVirtualLink;
        else if (name.equals("SetAttributes")) ret = iSetAttributes;
        else if (name.equals("SVSCMCloseEnumeration")) ret = iOpenBoxSetup;
        else if (name.equals("SVSCMEnumerate")) ret = iSVSCMEnumerate;
        else if (name.equals("SVSCMInstallService")) ret = iSVSCMInstallService;
        else if (name.equals("SVSCMListServices")) ret = iSVSCMListServices;
        else if (name.equals("SVSCMMachineDown")) ret = iSVSCMMachineDown;
        else if (name.equals("SVSCMQueryServiceState")) ret = iSVSCMQueryServiceState;
        else if (name.equals("SVSCMSetServiceState")) ret = iSVSCMSetServiceState;
        else if (name.equals("SVSCMUninstallService")) ret = iSVSCMUninstallService;
        else if (name.equals("SVSCMUninstallService")) ret = iSVSCMUninstallService;
        else if (name.equals("FILE_OBJECT")) ret = iFILE_OBJECT;
        else if (name.equals("NT_SERVICE")) ret = iNT_SERVICE;
        else if (name.equals("SaveFile")) ret = iSaveFile;
        else if (name.equals("StopService")) ret = iStopService;
        else if (name.equals("StartService")) ret = iStartService;
        else if (name.equals("NotifyNewRemoveableMedia")) ret = iNotifyNewRemoveableMedia;
        else if (name.equals("SetPartitionDirectoryOwner")) ret = iSetPartitionDirectoryOwner;
        else if (name.equals("GetPartitionDirectoryOwner")) ret = iGetPartitionDirectoryOwner;
        else if (name.equals("SERVICE_CONFIG")) ret = iSERVICE_CONFIG;
        else if (name.equals("SVSCMQueryServiceConfig")) ret = iSVSCMQueryServiceConfig;
        else if (name.equals("SVSCMSetServiceConfig")) ret = iSVSCMSetServiceConfig;
        else if (name.equals("AbortCachePartition")) ret = iAbortCachePartition;
        else if (name.equals("GetSoftwareRaidArrayHandle")) ret = iGetSoftwareRaidArrayHandle;
        else if (name.equals("SOFTWARE_RAID_ARRAY_CONFIGURATION")) ret = iSOFTWARE_RAID_ARRAY_CONFIGURATION;
        else if (name.equals("SaveLicense")) ret = iSaveLicense;
        else if (name.equals("GetLicense")) ret = iGetLicense;
        return ret;
    }
}
